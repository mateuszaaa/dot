#!/bin/bash

alias kkil='killall'
alias ls='ls --color=auto'
alias report='~/.matconf/bin/status.py'
alias c='xclip -selection clipboard'
alias glog='git log --oneline |head -30'
alias bb-restart='ssh buildbot cd /home/lapekc6/bm_ci/tools/;git pull -r;'
alias xx='byobu new'

function ut() {
    if [ -z $1 ]; then
        echo "no domain provided"
    else
        echo "./swim/$1/$1_ut --source_dir=../swim/$1/testing/data"
        ./swim/$1/$1_ut --source_dir=../swim/swim/$1/testing/data
    fi
}

function vut() {
    if [ -z $1 ]; then
        echo "no domain provided"
    else
        echo "vlagrind --gen-suppressions=all --error-exitcode=1 --track-origins=yes --leak-check=full --show-leak-kinds=all ./swim/$1/$1_ut --source_dir=../swim/$1/testing/data"
        valgrind --gen-suppressions=all --error-exitcode=1 --track-origins=yes --leak-check=full --show-leak-kinds=all ./swim/$1/$1_ut --source_dir=../swim/swim/$1/testing/data --gtest_shuffle
    fi
}

function redmi() {
    txt=`echo $1 | sed 's/ /%s/g'`
    adb shell input text $txt
}

function bb_restart() {
    ssh buildbot cd /home/lapekc6/bm_ci/tools/;git pull -r; buildbot restart /home/lapekc6/bm_ci/bm_buildbot/master/

}

function sshcopyenv() {
    if [ -z $1 ]; then
        echo "remote param needed"
        exit -1
    fi
    ssh $1 "rm -rf ~/config"
    scp -r ~/config $1:~/
    ssh $1 "rm -rf ~/.bashrc ~/.zshrc ~/.vimrc"
    ssh $1 "ln -s ~/config/zshrc ~/.zshrc"
    ssh $1 "ln -s ~/config/bashrc ~/.bashrc"
    ssh $1 "ln -s ~/config/vimrc ~/.vimrc"
}

function ffind() {
    find -iname "*$1*"
}

function bclean() {
    ssh $BMAKE_REMOTE_HOST rm -rf $BMAKE_REMOTE_REPO_DIR
}

function bsync() {
    ssh $BMAKE_REMOTE_HOST mkdir -p $BMAKE_REMOTE_REPO_DIR
    rsync -avt $BMAKE_LOCAL_REPO_DIR $BMAKE_REMOTE_HOST:$BMAKE_REMOTE_REPO_DIR
}

function bmake() {
    BMAKE_REMOTE_REPO_DIR+="/swim/"
    if [ -z BMAKE_PATH ]; then
        BMAKE_REMOTE_REPO_DIR+=$BMAKE_PATH
        echo "USING SUBPATH => $BMAKE_REMOTE_REPO_DIR"
    fi
    echo "ssh $BMAKE_REMOTE_HOST make -C $BMAKE_REMOTE_REPO_DIR $@"
    ssh $BMAKE_REMOTE_HOST make -C $BMAKE_REMOTE_REPO_DIR $@
}

function bm_review_answer(){
    commit_nr=`git log --oneline | head -1 | cut -d " " -f 1`
    git show $commit_nr
    echo "Fixed in $commit_nr" | c
}

function password(){
read -s PASS
for i in $@; do
    index=$(( $i-1  ))
    echo "clipboard ready: $i - ${PASS:$index:1}"
    echo ${PASS:$index:1} | xclip -selection clipboard
    read next
done
echo "exit..."
}

function hdd() {
    sudo cryptsetup plainOpen /dev/sdb2 hdd --key-file /home/.hdd.key
    mount /media/hdd
    echo "/media/hdd mounted"
}
